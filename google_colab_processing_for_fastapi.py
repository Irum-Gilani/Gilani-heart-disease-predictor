# -*- coding: utf-8 -*-
"""Google Colab Processing for FastAPI

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yOnp8d3KuNKsGaTY2_1prEMlMlSJ5Gcq

**FastAPI Endpoint for the Model**
 1. **Objective:**
 Create a FastAPI endpoint to serve the model.
 2. **Steps:**
 ○ Create a FastAPI application.
 ○ Write an endpoint that accepts input data, uses the loaded model to make
 predictions, and returns the predictions.
 **Deliverable:**
 ● A Python script (api.py) that defines the FastAPI application and the prediction endpoint.
"""

import pandas as pd

# Load the dataset obtained from Kaggle
Heart_Disease_Dataset = pd.read_csv("/content/Heart_Disease_Dataset.csv")

# For downgrading
!pip install scikit-learn==1.5.1

model = joblib.load("/content/random_forest_model.joblib")
model

from google.colab import files
files.download("random_forest_model.joblib")

!pip install huggingface_hub

from huggingface_hub import notebook_login

notebook_login()

with open("app.py", "w") as f:
    f.write('''
import gradio as gr
import joblib

# Load the model
model = joblib.load("model.joblib")

# Define the prediction function
def predict_heart_disease(age, resting_bp, serum_cholesterol):
    input_data = [[age, resting_bp, serum_cholesterol]]
    prediction = model.predict(input_data)
    return "Risk of heart disease" if prediction[0] == 1 else "No significant risk"

# Create Gradio Interface
inputs = [gr.inputs.Number(label="Age"),
          gr.inputs.Number(label="Resting Blood Pressure"),
          gr.inputs.Number(label="Serum Cholesterol")]
outputs = gr.outputs.Textbox(label="Prediction")

# Launch the Gradio Interface
app = gr.Interface(fn=predict_heart_disease, inputs=inputs, outputs=outputs)
app.launch()
    ''')

!ls



import joblib

# Assuming `model` is your trained model
joblib.dump(model, "random_forest_model.joblib")